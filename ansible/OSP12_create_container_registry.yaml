- name: Configure container registry settings for OSP12 deployment
  hosts: undercloud
  vars_files:
    - vars/globals.yaml
    - vars/networking.yaml
    - vars/services.yaml
    - vars/storage.yaml
  vars:
    - registry_type: local # Can be local, remote or satellite
    - ceph_image: rhceph-2-rhel7
    - ceph_tag: 2.4-4
  tasks:
    - name: Create a containers subdirectory for intermediate work files
      file:
        state: directory
        path: /home/{{ uc_user }}/container_data
        owner: "{{ uc_user }}"
        group: "{{ uc_user }}"
        mode: u+rwx,g+rx,o+rx
    - name: Create a default fact that we are not using Ceph
      set_fact:
        include_ceph: False
    - name: Update ceph fact if Cinder is uing Ceph
      set_fact:
        include_ceph: True
      with_items: "{{ storage_config }}"
      when: item.storage == "cinder" and item.ceph
    - name: Update ceph fact if Cinder Backup is uing Ceph
      set_fact:
        include_ceph: True
      with_items: "{{ storage_config }}"
      when: item.storage == "cinder" and item.backup == "ceph"
    - name: Update ceph fact if Nova-ephemeral is uing Ceph
      set_fact:
        include_ceph: True
      with_items: "{{ storage_config }}"
      when: item.storage == "nova-ephemeral" and item.use_ceph
    - name: Update ceph fact if Glance is uing Ceph
      set_fact:
        include_ceph: True
      with_items: "{{ storage_config }}"
      when: item.storage == "glance" and item.backend == "rbd"
    - name: Update ceph fact if Gnocchi is uing Ceph
      set_fact:
        include_ceph: True
      with_items: "{{ storage_config }}"
      when: item.storage == "gnocchi" and item.backend == "rbd"
    - name: Get the latest tag for the images (Registry Type> {{ registry_type }})
      shell: |
        source /home/{{ uc_user }}/stackrc
        openstack overcloud container image tag discover --image registry.access.redhat.com/rhosp{{ osp_version }}/openstack-base:latest --tag-from-label version-release
      register: osp_image_tag
    - name: Create script to generate package list (Registry Type> {{ registry_type }})
      copy:
        content: |
          source /home/{{ uc_user }}/stackrc
          openstack overcloud container image prepare \
            --namespace=registry.access.redhat.com/rhosp{{ osp_version }} \
            --prefix=openstack- \
            --tag={{ osp_image_tag.stdout }} \
            --output-images-file /home/{{ uc_user }}/container_data/local_registry_images.yaml
        dest: /home/{{ uc_user }}/container_data/generate_package_list.sh
        force: True
        owner: "{{ uc_user }}"
        group: "{{ uc_user }}"
        mode: u+rwx,g+rx,o+rx
      when: registry_type == "local"
    - name: Add Ironic environment files if needed (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_package_list.sh
        insertbefore: output-images-file 
        line: '  -e {{ stack_templates }}/environments/services/ironic.yaml \'
      when: deploy_ironic and registry_type == "local"
    - name: Add Ceph environment files if needed (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_package_list.sh
        insertbefore: output-images-file 
        line: '  -e {{ tripleo_heat_templates }}/environments/ceph-ansible/ceph-ansible.yaml \'
      when: include_ceph and registry_type == "local"
    - name: Add Ceph namespace information (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_package_list.sh
        insertbefore: output-images-file 
        line: '  --set ceph_namespace=registry.access.redhat.com/rhceph \'
      when: include_ceph and registry_type == "local"
    - name: Add Ceph image information (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_package_list.sh
        insertbefore: output-images-file 
        line: '  --set ceph_image={{ ceph_image }} \'
      when: include_ceph and registry_type == "local"
    - name: Add Ceph tag information (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_package_list.sh
        insertbefore: output-images-file 
        line: '  --set ceph_tag={{ ceph_tag }} \'
      when: include_ceph and registry_type == "local"
    - name: Generate a list of packages (Registry Type> {{ registry_type }})
      shell: |
        exec /home/{{ uc_user }}/container_data/generate_package_list.sh
      when: registry_type == "local"
    - name: Uploading images locally (Registry Type> {{ registry_type }})
      shell: |
        source /home/{{ uc_user }}/stackrc
        sudo openstack overcloud container image upload --config-file  /home/{{ uc_user }}/container_data/local_registry_images.yaml --verbose
      when: registry_type == "local"
    - name: Get local registry IP address (Registry Type> {{ registry_type }})
      shell: "docker images | grep -v redhat.com | grep -o '^.*rhosp{{ osp_version }}' | sort -u | awk -F: '{print $1}'"
      register: local_registry_ip
      when: registry_type == "local"
    - name: Get local registry Port (Registry Type> {{ registry_type }})
      shell: "docker images | grep -v redhat.com | grep -o '^.*rhosp{{ osp_version }}' | sort -u | egrep -o ':[0-9][0-9]*' | sed 's/://g'"
      register: local_registry_port
      when: registry_type == "local"
    - name: Create script to create deployment YAML (Registry Type> {{ registry_type }})
      copy:
        content: |
          source /home/{{ uc_user }}/stackrc
          openstack overcloud container image prepare \
            --namespace={{ local_registry_ip.stdout }}:{{ local_registry_port.stdout }}/rhosp{{ osp_version }} \
            --prefix=openstack- \
            --tag={{ osp_image_tag.stdout }} \
            --output-env-file={{ stack_templates }}/overcloud_images.yaml
        dest: /home/{{ uc_user }}/container_data/generate_deployment_YAML.sh
        force: True
        owner: "{{ uc_user }}"
        group: "{{ uc_user }}"
        mode: u+rwx,g+rx,o+rx
      when: registry_type == "local"
    - name: Add Ironic environment files if needed (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_deployment_YAML.sh
        insertbefore: output-env-file
        line: '  -e {{ stack_templates }}/environments/services/ironic.yaml \'
      when: deploy_ironic and registry_type == "local"
    - name: Add Ceph environment files if needed (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_deployment_YAML.sh
        insertbefore: output-env-file
        line: '  -e {{ tripleo_heat_templates }}/environments/ceph-ansible/ceph-ansible.yaml \'
      when: include_ceph and registry_type == "local"
    - name: Add Ceph namespace information (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_deployment_YAML.sh
        insertbefore: output-env-file
        line: '  --set ceph_namespace=registry.access.redhat.com/rhceph \'
      when: include_ceph and registry_type == "local"
    - name: Add Ceph image information (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_deployment_YAML.sh
        insertbefore: output-env-file
        line: '  --set ceph_image={{ ceph_image }} \'
      when: include_ceph and registry_type == "local"
    - name: Add Ceph tag information (Registry Type> {{ registry_type }})
      lineinfile:
        path: /home/{{ uc_user }}/container_data/generate_deployment_YAML.sh
        insertbefore: output-env-file
        line: '  --set ceph_tag={{ ceph_tag }} \'
      when: include_ceph and registry_type == "local"
    - name: Generate deployment YAML (Registry Type> {{ registry_type }})
      shell: |
        exec /home/{{ uc_user }}/container_data/generate_deployment_YAML.sh
      when: registry_type == "local"
    - name: Create YAML for deployment (Registry type> remote)
      shell: |
        source /home/{{ uc_user }}/stackrc
        openstack overcloud container image prepare \
          --namespace=registry.access.redhat.com/rhosp{{ osp_version }} \
          --prefix=openstack- \
          --tag={{ osp_image_tag.stdout }} \
          --output-env-file={{ stack_templates }}/overcloud_images.yaml 
      when: registry_type == "remote"
    - name: Create YAML for deployment (Registry type> remote)
      shell: |
        source /home/{{ uc_user }}/stackrc
        openstack overcloud container image prepare \
          --namespace=registry.access.redhat.com/rhosp{{ osp_version }} \
          --tag={{ osp_image_tag.stdout }} \
          -e {{ tripleo_heat_templates }}/environments/ceph-ansible/ceph-ansible.yaml \
          --set ceph_namespace=registry.access.redhat.com/rhceph \
          --set ceph_image={{ ceph_image }} \
          --set ceph_tag={{ ceph_tag }} \
          --output-env-file={{ stack_templates }}/overcloud_images.yaml 
      when: registry_type == "remote" and include_ceph
    - name: Add YAML file to {{ deploy_script }} if needed
      lineinfile:
        path: "{{ deploy_script }}"
        insertbefore: log-file overcloud_deployment.log
        line: '  -e {{ stack_templates }}/overcloud_images.yaml \'
